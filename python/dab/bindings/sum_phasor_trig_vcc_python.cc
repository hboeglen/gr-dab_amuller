/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(sum_phasor_trig_vcc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(2242672092fa26a0b808ed66fcf62304)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dab/sum_phasor_trig_vcc.h>
// pydoc.h is automatically generated in the build directory
#include <sum_phasor_trig_vcc_pydoc.h>

void bind_sum_phasor_trig_vcc(py::module& m)
{

    using sum_phasor_trig_vcc = ::gr::dab::sum_phasor_trig_vcc;


    py::class_<sum_phasor_trig_vcc,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<sum_phasor_trig_vcc>>(
        m, "sum_phasor_trig_vcc", D(sum_phasor_trig_vcc))

        .def(py::init(&sum_phasor_trig_vcc::make),
             py::arg("length"),
             D(sum_phasor_trig_vcc, make))


        ;
}
